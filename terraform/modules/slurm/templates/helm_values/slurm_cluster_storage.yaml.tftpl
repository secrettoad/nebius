volume:
  controllerSpool:
    size: ${volume.controller_spool.size}
    filestoreDeviceName: ${volume.controller_spool.device}
  jail:
    size: ${volume.jail.size}
    filestoreDeviceName: ${volume.jail.device}
  %{~ if length(volume.jail_submounts) > 0 ~}
  jailSubMounts:
    %{~ for sub_mount in volume.jail_submounts ~}
    - name: ${sub_mount.name}
      size: ${sub_mount.size}
      filestoreDeviceName: ${sub_mount.device}
    %{~ endfor ~}
  %{~ endif ~}
  accounting:
    enabled: ${volume.accounting.enabled}
    %{~ if volume.accounting.enabled ~}
    size: ${volume.accounting.size}
    filestoreDeviceName: ${volume.accounting.device}
    %{~ endif ~}

storage:
  accounting:
    matchExpressions:
      - key: ${scheduling.label.nodeset}
        operator: In
        values:
          - ${scheduling.accounting.match}
    tolerations:
      - key: ${scheduling.label.nodeset}
        operator: Equal
        value: ${scheduling.label.accounting}
        effect: PreferNoSchedule

  controllerSpool:
    matchExpressions:
      - key: ${scheduling.label.nodeset}
        operator: In
        values:
          - ${scheduling.controller.match}
    tolerations:
      - key: ${scheduling.label.nodeset}
        operator: Equal
        value: ${scheduling.label.controller}
        effect: PreferNoSchedule

  jail:
    matchExpressions:
      - key: ${scheduling.label.nodeset}
        operator: In
        values:
          - ${scheduling.system.match}
          - ${scheduling.controller.match}
        %{~ for worker in scheduling.worker.matches ~}
          - ${worker}
        %{~ endfor ~}
          - ${scheduling.login.match}
          - ${scheduling.accounting.match}
    tolerations:
      - key: ${scheduling.label.nodeset}
        operator: Exists
        effect: PreferNoSchedule
    %{~ if scheduling.worker.gpu_present ~}
      - key: ${scheduling.label.gpu}
        operator: Exists
        effect: NoSchedule
    %{~ endif ~}
